"""
 Contains the complete library of rules and available error codes
"""
naming_convention = {
    "pep8-naming":
	[
		("class-names-capwords", "N801"),
		("function-names-lowercase", "N802"),
		("function-arguments-lowercase", "N803"),
		("classmethod-argument-named-cls", "N804"),
		("method-argument-named-self", "N805"),
		("variables-in-function-lowercase", "N806"),
		("function-name-double-underscore", "N807"),
		("constant-import-as-uppercase", "N811"),
		("lowercase-import-as-lowercase", "N812"),
		("camelcase-import-as-lowercase", "N813"),
		("camelcase-import-as-constant", "N814"),
		("mixedcase-variables-in-class-scope", "N815"),
		("mixedcase-variables-in-global-scope", "N816"),
		("camelcase-import-as-acronym", "N817"),
		("exception-names-error-suffix", "N818")
	]
}

style_convention = {
    "indentation": [
        ("mixed-spaces-tabs", "E101"),
        ("indentation-multiple-of-four", "E111"),
        ("expected-indented-block", "E112"),
        ("unexpected-indentation", "E113"),
        ("comment-indentation-multiple-of-four", "E114"),
        ("expected-indented-block-comment", "E115"),
        ("unexpected-comment-indentation", "E116"),
        ("over-indented", "E117"),
        ("continuation-line-under-indented-hanging-indent", "E121"),
        ("continuation-line-missing-or-outdented", "E122"),
        ("closing-bracket-misaligned", "E123"),
        ("closing-bracket-visual-indentation", "E124"),
        ("continuation-line-same-indent-next-logical-line", "E125"),
        ("continuation-line-over-indented-hanging-indent", "E126"),
        ("continuation-line-over-indented-visual-indent", "E127"),
        ("continuation-line-under-indented-visual-indent", "E128"),
        ("visually-indented-same-indent-next-logical-line", "E129"),
        ("continuation-line-unaligned-hanging-indent", "E131"),
        ("closing-bracket-missing-indentation", "E133"),
		("indentation-contains-tabs", "W191"),
    ],
	"whitespaces": [
		("whitespace-after-opening-parenthesis", "E201"),
		("whitespace-before-closing-parenthesis", "E202"),
		("whitespace-before-separator", "E203"),
		("whitespace-before-opening-parenthesis", "E211"),
		("multiple-spaces-before-operator", "E221"),
		("multiple-spaces-after-operator", "E222"),
		("tab-before-operator", "E223"),
		("tab-after-operator", "E224"),
		("missing-whitespace-around-operator", "E225"),
		("missing-whitespace-around-arithmetic-operator", "E226"),
		("missing-whitespace-around-bitwise-operator", "E227"),
		("missing-whitespace-around-modulo-operator", "E228"),
		("missing-whitespace-after-separator", "E231"),
		("multiple-spaces-after-comma", "E241"),
		("tab-after-comma", "E242"),
		("unexpected-spaces-around-equals", "E251"),
		("at-least-two-spaces-before-inline-comment", "E261"),
		("inline-comment-start-with-hash-space", "E262"),
		("block-comment-start-with-hash-space", "E265"),
		("too-many-leading-hash-in-block-comment", "E266"),
		("multiple-spaces-after-keyword", "E271"),
		("multiple-spaces-before-keyword", "E272"),
		("tab-after-keyword", "E273"),
		("tab-before-keyword", "E274"),
		("missing-whitespace-after-keyword", "E275"),
		("trailing-whitespace", "W291"),
		("no-newline-at-end-of-file", "W292"),
		("blank-line-contains-whitespace", "W293"),
	],
	"blank_lines": [
		("expected-1-blank-line-found-0", "E301"),
		("expected-2-blank-lines-found-0", "E302"),
		("too-many-blank-lines", "E303"),
		("blank-lines-after-function-decorator", "E304"),
		("expected-2-blank-lines-after-function-class", "E305"),
		("expected-1-blank-line-before-nested-definition", "E306"),
		("blank-line-at-end-of-file", "W391")
	],

	"import": [
		("multiple-imports-on-one-line", "E401"),
		("module-level-import-not-at-top", "E402"),
	],

	"line_length": [
		("line-too-long", "E501"),
		("redundant-backslash-between-brackets", "E502")
	],

	"statement": [
		("multiple-statements-on-one-line-colon", "E701"),
		("multiple-statements-on-one-line-semicolon", "E702"),
		("statement-ends-with-semicolon", "E703"),
		("multiple-statements-on-one-line-def", "E704"),
		("comparison-to-None", "E711"),
		("comparison-to-True", "E712"),
		("test-for-membership", "E713"),
		("test-for-object-identity", "E714"),
		("do-not-compare-types", "E721"),
		("do-not-use-bare-except", "E722"),
		("do-not-assign-lambda", "E731"),
		("do-not-use-l-O-I", "E741"),
		("do-not-define-l-O-I-classes", "E742"),
		("do-not-define-l-O-I-functions", "E743"),
	],

	"runtime": [
		("syntax-or-indentation-error", "E901"),
		("ioerror", "E902")
	],

	"line_break": [
		("line-break-before-binary-operator", "W503"),
		("line-break-after-binary-operator", "W504"),
		("doc-line-too-long", "W505")
	],

	"deprecation": [
		("invalid-escape-sequence", "W605")
	],

	"flow_control": [
		("break-outside-loop", "F701"),
		("continue-outside-loop", "F702"),
		("yield-outside-function", "F704"),
		("return-outside-function", "F706"),
		("always-true-test", "F634"),

	],

	"logical_issues": [
		 ("too-many-expressions", "F621"),
		 ("two-starred-expressions", "F622"),
		 ("assertion-test-tuple", "F631"),
		 ("compare-literal", "F632"),
		 ("invalid-shift-operator", "F633"),
		 ("invalid-except-block-order", "F707"),
		 ("doctest-error", "F721"),
		 ("forward-annotation-syntax-error", "F722"),
		 ("type-comment-error", "F723"),
		 ("redefinition-unused-name", "F811"),
		 ("undefined-variable", "F821"),
		 ("undefined-variable-in-all", "F822"),
		 ("reference-before-assignment", "F823"),
		 ("duplicate-function-arg", "F831"),
		 ("unused-local-variable", "F841"),
		 ("not-implemented-error", "F901"),
	],

	"code_quality": [
		 ("unused-import", "F401"),
		 ("import-shadowed", "F402"),
		 ("star-import", "F403"),
		 ("future-import-order", "F404"),
		 ("undefined-from-star-import", "F405"),
		 ("star-import-restriction", "F406"),
		 ("undefined-future-import", "F407"),
		 ("invalid-format", "F501"),
		 ("invalid-mapping-format", "F502"),
		 ("invalid-sequence-format", "F503"),
		 ("unused-named-arguments", "F504"),
		 ("missing-named-arguments", "F505"),
		 ("mixed-args-format", "F506"),
		 ("mismatch-args-format", "F507"),
		 ("invalid-format-character", "F509"),
		 ("invalid-format-method", "F521"),
		 ("unused-named-arguments-format", "F522"),
		 ("unused-positional-arguments-format", "F523"),
		 ("missing-argument-format", "F524"),
		 ("mixed-automatic-manual-numbering", "F525"),
		 ("empty-f-string", "F541"),
		 ("duplicate-dict-key", "F601"),
		 ("duplicate-dict-var-key", "F602"),
	],

	"logical_operations": [
		 ("too-many-expressions", "F621"),
		 ("two-starred-expressions", "F622"),
		 ("assertion-test-tuple", "F631"),
		 ("compare-literal", "F632"),
		 ("invalid-shift-operator", "F633"),
		 ("always-true-test", "F634"),
	],

    "code_complexity": [
        ("code-complexity", "C901"),
    ],
}
security = {
    "bandit": [
        ("assert-used", "S101"),
        ("exec-used", "S102"),
        ("set-bad-file-permissions", "S103"),
        ("hardcoded-bind-all-interfaces", "S104"),
        ("hardcoded-password-string", "S105"),
        ("hardcoded-password-funcarg", "S106"),
        ("hardcoded-password-default", "S107"),
        ("hardcoded-tmp-directory", "S108"),
        ("try-except-pass", "S110"),
        ("try-except-continue", "S112"),
        ("flask-debug-true", "S201"),
        ("pickle-used", "S301"),
        ("unsafe-marshal-module", "S302"),
        ("insecure-hash-function", "S303"),
        ("insecure-cipher", "S304"),
        ("insecure-cipher-mode", "S305"),
        ("insecure-mktemp", "S306"),
        ("insecure-function-literal-eval", "S307"),
        ("unsafe-mark-safe", "S308"),
        ("https-connection-old-python", "S309"),
        ("audit-url-open", "S310"),
        ("insecure-prng", "S311"),
        ("telnet-functions-called", "S312"),
        ("unsafe-xml-parsing-lxml", "S313"),
        ("unsafe-xml-parsing-elementtree", "S314"),
        ("unsafe-xml-parsing-minidom", "S315"),
        ("unsafe-xml-parsing-expat", "S316"),
        ("unsafe-xml-parsing-sax", "S317"),
        ("unsafe-xml-parsing-pulldom", "S318"),
        ("unsafe-xml-parsing-cElementTree", "S319"),
        ("unsafe-xml-parsing-xmltodict", "S320"),
        ("insecure-ftp-functions", "S321"),
        ("insecure-ssl-context", "S323"),
        ("insecure-hashlib-functions", "S324"),
        ("insecure-tempnam", "S325"),
        ("insecure-telnet-module", "S401"),
        ("insecure-ftp-module", "S402"),
        ("security-implications-module", "S403"),
        ("security-implications-subprocess", "S404"),
        ("unsafe-xml-parsing-lxml-2", "S405"),
        ("unsafe-xml-parsing-elementtree-2", "S406"),
        ("unsafe-xml-parsing-minidom-2", "S407"),
        ("unsafe-xml-parsing-expat-2", "S408"),
        ("unsafe-xml-parsing-sax-2", "S409"),
        ("unsafe-xml-parsing-pulldom-2", "S410"),
        ("xml-vulnerability-mitigation", "S411"),
        ("security-implications-module", "S412"),
        ("deprecated-crypto-library", "S413"),
        ("insecure-ipmi-module", "S415"),
        ("request-no-cert-validation", "S501"),
        ("ssl-bad-version", "S502"),
        ("ssl-bad-defaults", "S503"),
        ("ssl-no-version", "S504"),
        ("weak-cryptographic-key", "S505"),
        ("unsafe-yaml-load", "S506"),
        ("ssh-no-host-key-verification", "S507"),
        ("insecure-snmp-version", "S508"),
        ("weak-snmp-cryptography", "S509"),
        ("paramiko-calls", "S601"),
        ("subprocess-popen-shell-true", "S602"),
        ("subprocess-without-shell-true", "S603"),
        ("function-shell-true", "S604"),
        ("start-process-shell", "S605"),
        ("start-process-no-shell", "S606"),
        ("start-process-partial-path", "S607"),
        ("hardcoded-sql-expressions", "S608"),
        ("linux-wildcard-injection", "S609"),
        ("django-extra-used", "S610"),
        ("django-rawsql-used", "S611"),
        ("jinja2-autoescape-false", "S701"),
        ("use-mako-templates", "S702"),
        ("django-mark-safe", "S703")
    ],
}

error_map = {
    "pep8-naming": ["N801", "N802", "N803", "N804", "N805", "N806", "N807", "N811", "N812", "N813", "N814", "N815", "N816", "N817", "N818"],
	"indentation": [ "E101", "E111", "E112", "E113", "E114", "E115", "E116", "E117", "E121","E122","E123","E124", "E125","E126","E127","E128","E129","E131", "E133", "W191"],
	"whitespaces": ["E201", "E202", "E203", "E211", "E221", "E222", "E223", "E224", "E225", "E226", "E227", "E228", "E231", "E241", "E242", "E251", "E261", "E262", "E265", "E266", "E271", "E272", "E273", "E274", "E275", "W291", "W292", "W293"],
	"blank_lines": ["E301", "E302", "E303", "E304", "E305", "E306", "W391"],
	"import": ["E401", "E402"],
	"line_length": ["E501", "E502"],
	"statement": ["E701", "E702", "E703", "E704", "E711", "E712", "E713", "E714", "E721", "E722", "E731", "E741", "E742", "E743"],
	"runtime": ["E901", "E902"],
	"line_break": ["W503", "W504", "W505"],
	"deprecation": ["W605"],
	"flow_control": ["F701", "F702", "F704", "F706", "F634"],
	"logical_issues": ["F621", "F622", "F631", "F632", "F633", "F707", "F721", "F722", "F723", "F811", "F821", "F822", "F823", "F831", "F841", "F901"],
	"code_quality": ["F401", "F402", "F403", "F404", "F405", "F406", "F407", "F501", "F502", "F503", "F504", "F505", "F506", "F507", "F509", "F521", "F522", "F523", "F524", "F525", "F541", "F601", "F602"],
	"logical_operations": ["F621", "F622", "F631", "F632", "F633", "F634"],
    "code_complexity": ["C901"],
    "bandit": [
        "S101", "S102", "S103", "S104", "S105", "S106", "S107", "S108", "S110", "S112",
        "S201", "S301", "S302", "S303", "S304", "S305", "S306", "S307", "S308", "S309",
        "S310", "S311", "S312", "S313", "S314", "S315", "S316", "S317", "S318", "S319",
        "S320", "S321", "S323", "S324", "S325", "S401", "S402", "S403", "S404", "S405",
        "S406", "S407", "S408", "S409", "S410", "S411", "S412", "S413", "S415", "S501",
        "S502", "S503", "S504", "S505", "S506", "S507", "S508", "S509", "S601", "S602",
        "S603", "S604", "S605", "S606", "S607", "S608", "S609", "S610", "S611", "S701",
        "S702", "S703"
    ],
}


error_warning_collection = {
    'abc': 'warning'
}

error_severity_map = {
 'N801': 'error',
 'N802': 'error',
 'N803': 'error',
 'N804': 'error',
 'N805': 'error',
 'N806': 'error',
 'N807': 'error',
 'N811': 'error',
 'N812': 'error',
 'N813': 'error',
 'N814': 'error',
 'N815': 'error',
 'N816': 'error',
 'N817': 'error',
 'N818': 'error',
 'E101': 'error',
 'E111': 'error',
 'E112': 'error',
 'E113': 'error',
 'E114': 'error',
 'E115': 'error',
 'E116': 'error',
 'E117': 'error',
 'E121': 'error',
 'E122': 'error',
 'E123': 'error',
 'E124': 'error',
 'E125': 'error',
 'E126': 'error',
 'E127': 'error',
 'E128': 'error',
 'E129': 'error',
 'E131': 'error',
 'E133': 'error',
 'W191': 'error',
 'E201': 'error',
 'E202': 'error',
 'E203': 'error',
 'E211': 'error',
 'E221': 'error',
 'E222': 'error',
 'E223': 'error',
 'E224': 'error',
 'E225': 'error',
 'E226': 'error',
 'E227': 'error',
 'E228': 'error',
 'E231': 'error',
 'E241': 'error',
 'E242': 'error',
 'E251': 'error',
 'E261': 'error',
 'E262': 'error',
 'E265': 'error',
 'E266': 'error',
 'E271': 'error',
 'E272': 'error',
 'E273': 'error',
 'E274': 'error',
 'E275': 'error',
 'W291': 'warning',
 'W292': 'warning',
 'W293': 'warning',
 'E301': 'error',
 'E302': 'error',
 'E303': 'error',
 'E304': 'error',
 'E305': 'error',
 'E306': 'error',
 'W391': 'warning',
 'E401': 'error',
 'E402': 'error',
 'E501': 'error',
 'E502': 'error',
 'E701': 'error',
 'E702': 'error',
 'E703': 'error',
 'E704': 'error',
 'E711': 'error',
 'E712': 'error',
 'E713': 'error',
 'E714': 'error',
 'E721': 'error',
 'E722': 'error',
 'E731': 'error',
 'E741': 'error',
 'E742': 'error',
 'E743': 'error',
 'E901': 'error',
 'E902': 'error',
 'W503': 'error',
 'W504': 'warning',
 'W505': 'warning',
 'W605': 'warning',
 'F701': 'error',
 'F702': 'error',
 'F704': 'error',
 'F706': 'error',
 'F634': 'error',
 'F621': 'error',
 'F622': 'error',
 'F631': 'error',
 'F632': 'error',
 'F633': 'error',
 'F707': 'error',
 'F721': 'error',
 'F722': 'error',
 'F723': 'error',
 'F811': 'error',
 'F821': 'error',
 'F822': 'error',
 'F823': 'error',
 'F831': 'error',
 'F841': 'error',
 'F901': 'error',
 'F401': 'error',
 'F402': 'error',
 'F403': 'error',
 'F404': 'error',
 'F405': 'error',
 'F406': 'error',
 'F407': 'error',
 'F501': 'error',
 'F502': 'error',
 'F503': 'error',
 'F504': 'error',
 'F505': 'error',
 'F506': 'error',
 'F507': 'error',
 'F509': 'error',
 'F521': 'error',
 'F522': 'error',
 'F523': 'error',
 'F524': 'error',
 'F525': 'error',
 'F541': 'error',
 'F601': 'error',
 'F602': 'error',
 'C901': 'error',
}

valid_severities = {
    "critical": "Very severe issue requiring immediate action",
    "error": "Critical issue preventing execution or functionality",
    "warning": "Potential issue that should be addressed but not critical",
    "info": "Informational message, typically non-disruptive",
    "hint": "Suggestion or tip that can be helpful but isn't crucial",
    "debug": "Detailed, often low-priority information useful for debugging"
}





